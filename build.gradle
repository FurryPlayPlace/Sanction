import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "sanction" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

configurations {
    shadow {
        extendsFrom(implementation)
    }
}

repositories {
    mavenCentral()

    maven {
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }

    maven { url 'https://maven.furryplayplace.cz/repository/public/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:1.21+build.1:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compileOnly('net.furryplayplace:CottonFramework:1.0.13:dev')
    compileOnly('net.furryplayplace:CottonFramework:1.0.13:sources')
    compileOnly("org.apache.commons:commons-dbcp2:2.1.1")
    compileOnly("mysql:mysql-connector-java:5.1.38")
}

tasks.register('shadowJar1', ShadowJar) {
    configurations = [project.configurations.shadow]
}

shadowJar {
    archiveBaseName.set(project.archives_base_name)
    archiveClassifier.set('all')
    archiveVersion.set(project.version)

    zip64(true)
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Plugin-Main-Class': 'net.furryplayplace.sanction.Sanction',
                'Plugin-Name': 'Sanction'
        )
    }
}